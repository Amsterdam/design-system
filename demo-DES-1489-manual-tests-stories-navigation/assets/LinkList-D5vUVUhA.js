import{r as l,j as n,c as o,D as m}from"./iframe-CB_MPhzc.js";import{I as u}from"./Icon-DBHlhSja.js";const f=["contrast","inverse"],h=["small","large"],c=l.forwardRef(({children:e,className:s,color:i,icon:a=m,size:t,...L},k)=>n.jsx("li",{children:n.jsxs("a",{className:o("ams-link-list__link",i&&`ams-link-list__link--${i}`,t&&`ams-link-list__link--${t}`,s),ref:k,...L,children:[n.jsx(u,{size:t,svg:a}),e]})}));c.displayName="LinkList.Link";try{LinkList.Link.displayName="LinkList.Link",LinkList.Link.__docgenInfo={description:"One link with a Link List.",displayName:"LinkList.Link",props:{color:{defaultValue:null,description:"Changes the text colour for readability on a light or dark background.",name:"color",required:!1,type:{name:"enum",value:[{value:'"inverse"'},{value:'"contrast"'}]}},icon:{defaultValue:{value:"ChevronForwardIcon"},description:`An icon to display instead of the default chevron.
Donâ€™t mix custom icons with chevrons in one list.`,name:"icon",required:!1,type:{name:"Function | ReactNode"}},size:{defaultValue:null,description:"The size of the text. Use the same size for all items in the list.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'}]}}}}}catch{}const d=l.forwardRef(({children:e,className:s,...i},a)=>n.jsx("ul",{className:o("ams-link-list",s),ref:a,...i,children:e}));d.displayName="LinkList";const r=Object.assign(d,{Link:c});try{r.displayName="LinkList",r.__docgenInfo={description:"",displayName:"LinkList",props:{}}}catch{}export{r as L,f as a,h as l};
