{"version":3,"file":"Switch.docs-adc01d9e.js","sources":["../../../../packages/css/src/switch/README.md?raw","../../src/Switch/Switch.docs.mdx"],"sourcesContent":["export default \"# Switch\\n\\nEen switch (in het Nederlands: schakelaar) is een besturingselement om snel tussen twee verschillende staten te schakelen. Een schakelaar is van toepassing op een pagina of het hele systeem. Bijvoorbeeld een aan/uit-schakelaar.\\n\\n## Richtlijnen\\n\\n- Schakel alleen tussen twee verschillende statussen. Het is een binaire actie.\\n- Gebruik labels met een schakelaar zodat de actie duidelijk is.\\n- De actie vindt direct plaats zodra de gebruiker de schakelaar gebruikt.\\n\\n## Relevante WCAG eisen\\n\\n- [WCAG 1.3.5](https://www.w3.org/WAI/WCAG21/Understanding/identify-input-purpose.html): het is zowel voor een gebruiker als programmatisch duidelijk wat het doel van een formulierveld is.\\n\\nSwitch is een interactief element, hier gelden [de algemene eisen en richtlijnen voor interactieve elementen](https://amsterdam.github.io/design-system/?path=/docs/docs-designrichtlijnen-interactieve-elementen--docs) voor.\\n\\n## Referenties\\n\\n- [Switch Pattern](https://www.w3.org/WAI/ARIA/apg/patterns/switch/)\\n- [Role switch](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/switch_role)\\n\"","import { Canvas, Controls, Markdown, Meta, Primary } from \"@storybook/blocks\";\nimport * as SwitchStories from \"./Switch.stories.tsx\";\nimport README from \"../../../../packages/css/src/switch/README.md?raw\";\n\n<Meta of={SwitchStories} />\n\n<Markdown>{README}</Markdown>\n\nIt can be used as a standalone component or as a form control element.\nWhen used as a standalone component provide an `aria-label` or `aria-labelledby` prop to keep it accessible.\nWhen used as a formcontrol, make sure to add the associated `<FormLabel>` component.\n\n<Primary />\n\n<Controls />\n\n## Stories\n\n### Default\n\n<Canvas of={SwitchStories.Default} />\n\n### With Label\n\n<Canvas of={SwitchStories.WithFormLabel} />\n"],"names":["README","_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","SwitchStories","Markdown","Primary","Controls","Canvas","SwitchStories.Default","SwitchStories.WithFormLabel","MDXContent","MDXLayout"],"mappings":"0cAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECMf,SAASC,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,EAAG,IACH,KAAM,OACN,GAAI,KACJ,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAOG,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,GAAIC,CACV,CAAK,EAAG;AAAA,EAAMF,EAAI,IAACG,EAAU,CACvB,SAAUV,CACX,CAAA,EAAG;AAAA,EAAMK,OAAMF,EAAY,EAAG,CAC7B,SAAU,CAAC;AAAA,iDAA2HI,MAAKJ,EAAY,KAAM,CAC3J,SAAU,YACX,CAAA,EAAG,OAAQI,MAAKJ,EAAY,KAAM,CACjC,SAAU,iBACX,CAAA,EAAG;AAAA,8DAA8FI,MAAKJ,EAAY,KAAM,CACvH,SAAU,aACX,CAAA,EAAG,aAAa,CAClB,CAAA,EAAG;AAAA,EAAMI,EAAAA,IAAKI,EAAS,CAAA,CAAE,EAAG;AAAA,EAAMJ,EAAI,IAACK,EAAU,CAAE,CAAA,EAAG;AAAA,EAAML,EAAAA,IAAKJ,EAAY,GAAI,CAChF,GAAI,UACJ,SAAU,SACX,CAAA,EAAG;AAAA,EAAMI,MAAKJ,EAAY,GAAI,CAC7B,GAAI,UACJ,SAAU,SAChB,CAAK,EAAG;AAAA,EAAMI,EAAI,IAACM,EAAQ,CACrB,GAAIC,CACL,CAAA,EAAG;AAAA,EAAMP,MAAKJ,EAAY,GAAI,CAC7B,GAAI,aACJ,SAAU,YAChB,CAAK,EAAG;AAAA,EAAMI,EAAI,IAACM,EAAQ,CACrB,GAAIE,CACV,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASC,EAAWd,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASe,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEb,EAAoB,EAAEF,EAAM,UAAU,EACrF,OAAOe,EAAYV,EAAAA,IAAKU,EAAW,OAAO,OAAO,CAAE,EAAEf,EAAO,CAC1D,SAAUK,EAAAA,IAAKN,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAkBC,CAAK,CAC/B"}