import{r as m,j as e,c as u,f as d,O as p,Z as g,Q as _,_ as x,V as v}from"./iframe-CNtOXSn4.js";import{I as j}from"./Icon-q_xvFjfG.js";const f=m.forwardRef(({children:n,className:a,color:s,icon:i,...c},l)=>e.jsx("li",{children:e.jsxs("a",{...c,className:u("ams-menu__link",s&&`ams-menu__link--${s}`,a),ref:l,children:[e.jsx(j,{className:"ams-menu__icon",svg:i}),n]})}));f.displayName="Menu.Link";try{Menu.Link.displayName="Menu.Link",Menu.Link.__docgenInfo={description:"",displayName:"Menu.Link",props:{color:{defaultValue:null,description:`Changes the text colour for readability on a light or dark background.
@deprecated The menu has a dark background now, so this is no longer needed.`,name:"color",required:!1,type:{name:"enum",value:[{value:'"inverse"'},{value:'"contrast"'}]}},icon:{defaultValue:null,description:"An icon to display instead of the default chevron. Donâ€™t mix custom icons with chevrons in one list.",name:"icon",required:!0,type:{name:"Function | ReactNode"}}}}}catch{}const h=m.forwardRef(({accessibleName:n="Hoofdnavigatie",children:a,className:s,narrow:i,...c},l)=>e.jsxs("nav",{...c,"aria-labelledby":"primary-navigation",className:u("ams-menu",i&&"ams-menu--narrow",s),ref:l,children:[e.jsx("h2",{className:"ams-visually-hidden",id:"primary-navigation",children:n}),e.jsx("ul",{className:"ams-menu__list",children:a})]}));h.displayName="Menu";const r=Object.assign(h,{Link:f});try{r.displayName="Menu",r.__docgenInfo={description:"",displayName:"Menu",props:{accessibleName:{defaultValue:{value:"Hoofdnavigatie"},description:"A name for this menu that will be announced by screen readers.",name:"accessibleName",required:!1,type:{name:"string"}},narrow:{defaultValue:null,description:"Whether the menu is displayed on narrow windows. TODO Improve name.",name:"narrow",required:!1,type:{name:"boolean"}}}}}catch{}const y=[{href:"#",icon:e.jsx(p,{}),text:"Dashboard"},{href:"#",icon:e.jsx(g,{}),text:"Projecten"},{href:"#",icon:e.jsx(_,{}),text:"Rapportages"},{href:"#",icon:e.jsx(x,{}),text:"Analyses"},{href:"#",icon:e.jsx(v,{}),text:"Instellingen"}],k={title:"Components/Navigation/Menu",component:r};r.Link;const b={args:{children:y.map(({href:n,icon:a,text:s})=>e.jsx(r.Link,{href:n,icon:a,children:s},s)),style:{display:"block"}}},L={args:{children:y[0].text,href:"#",icon:e.jsx(p,{})},argTypes:{color:{control:{labels:{undefined:"default"},type:"radio"},options:[void 0,"contrast","inverse"]},icon:{control:{labels:{undefined:"none"},type:"select"},mapping:d,options:[void 0,...Object.keys(d)]}},decorators:[n=>e.jsx(r,{children:e.jsx(n,{})})],render:({children:n,...a})=>e.jsx(r.Link,{...a,children:n})},o={...b},t={...L};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  ...StoryTemplate
}`,...o.parameters?.docs?.source}}};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  ...LinkStoryTemplate
}`,...t.parameters?.docs?.source}}};const M=["Default","Link"],w=Object.freeze(Object.defineProperty({__proto__:null,Default:o,Link:t,__namedExportsOrder:M,default:k},Symbol.toStringTag,{value:"Module"}));export{t as L,w as M};
