import{j as m}from"./jsx-runtime-Nms4Y4qS.js";import{c as u}from"./clsx-B-dksMZM.js";import{r as d}from"./index-BwDkhjyp.js";import{B as f}from"./Button-_hHZidVy.js";const r=d.forwardRef(({as:e="div",children:l,className:n,gap:i="medium",...c},p)=>m.jsx(e,{...c,ref:p,className:u("ams-row",`ams-row--${i}`,n),children:l}));r.displayName="Row";try{r.displayName="Row",r.__docgenInfo={description:"",displayName:"Row",props:{as:{defaultValue:null,description:"The HTML element to use.",name:"as",required:!1,type:{name:"enum",value:[{value:'"article"'},{value:'"div"'},{value:'"section"'}]}},gap:{defaultValue:{value:"medium"},description:"The amount of vertical space between items.",name:"gap",required:!1,type:{name:"string"}}}}}catch{}const y=Array.from(Array(3).keys()).map(e=>m.jsxs(f,{children:["Button ",e+1]},e)),_={title:"Components/Layout/Row",component:r,args:{children:y},argTypes:{gap:{control:"radio",options:["extra-small","small","medium","large","extra-large"]}}},a={};var o,t,s;a.parameters={...a.parameters,docs:{...(o=a.parameters)==null?void 0:o.docs,source:{originalSource:"{}",...(s=(t=a.parameters)==null?void 0:t.docs)==null?void 0:s.source}}};const g=["Default"],h=Object.freeze(Object.defineProperty({__proto__:null,Default:a,__namedExportsOrder:g,default:_},Symbol.toStringTag,{value:"Module"}));export{h as R};
