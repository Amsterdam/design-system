{"version":3,"file":"TopTaskLink.stories-1a47f5f6.js","sources":["../../../../packages/react/src/TopTaskLink/TopTaskLink.tsx","../../../../packages/react/src/Grid/GridCell.tsx","../../../../packages/react/src/Grid/PageGrid.tsx"],"sourcesContent":["/**\n * @license EUPL-1.2+\n * Copyright (c) 2023 Gemeente Amsterdam\n */\n\nimport clsx from 'clsx'\nimport { AnchorHTMLAttributes, ForwardedRef, forwardRef } from 'react'\n\nexport interface TopTaskLinkProps extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  label: string\n  description?: string\n}\n\nexport const TopTaskLink = forwardRef(\n  ({ className, label, description, ...restProps }: TopTaskLinkProps, ref: ForwardedRef<HTMLAnchorElement>) => (\n    <a\n      {...restProps}\n      ref={ref}\n      className={clsx('amsterdam-top-task-link', className)}\n      // Add an aria-label with a comma between label and description, so screenreaders have a slight pause between the two.\n      aria-label={`${label}${description ? `, ${description}` : ''}`}\n    >\n      <span className=\"amsterdam-top-task-link__label\">{label}</span>\n      {description && <span className=\"amsterdam-top-task-link__description\">{description}</span>}\n    </a>\n  ),\n)\n\nTopTaskLink.displayName = 'TopTaskLink'\n","/**\n * @license EUPL-1.2+\n * Copyright (c) 2023 Gemeente Amsterdam\n */\n\nimport clsx from 'clsx'\nimport { PropsWithChildren } from 'react'\nimport { PageGridColumnNumber } from './PageGrid'\n\nexport type GridCellProps = PropsWithChildren<{\n  gridColumns?:\n    | PageGridColumnNumber\n    | {\n        start?: PageGridColumnNumber\n        span: PageGridColumnNumber\n      }\n}>\n\nexport const gridColumnClassNames = (gridColumns?: GridCellProps['gridColumns']) => {\n  if (!gridColumns) {\n    return ''\n  }\n\n  if (typeof gridColumns === 'number') {\n    return `amsterdam-grid-column-span-${gridColumns}`\n  }\n\n  const { start, span } = gridColumns\n\n  return clsx(start && `amsterdam-grid-column-start-${start}`, span && `amsterdam-grid-column-span-${span}`)\n}\n\nexport const GridCell = ({ children, gridColumns }: GridCellProps) => (\n  <div className={clsx('amsterdam-grid-cell', gridColumnClassNames(gridColumns))}>{children}</div>\n)\n\nGridCell.displayName = 'GridCell'\n","/**\n * @license EUPL-1.2+\n * Copyright (c) 2023 Gemeente Amsterdam\n */\n\nimport { PropsWithChildren } from 'react'\n\nexport type PageGridColumnNumber = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\n\nexport type PageGridProps = PropsWithChildren<{}>\n\nexport const PageGrid = ({ children }: PageGridProps) => <div className=\"amsterdam-page-grid\">{children}</div>\n\nPageGrid.displayName = 'PageGrid'\n"],"names":["TopTaskLink","forwardRef","className","label","description","restProps","ref","jsxs","clsx","jsx","gridColumnClassNames","gridColumns","start","span","GridCell","children","PageGrid"],"mappings":"iFAaO,MAAAA,EAAAC,EAAA,WAAoB,CAAA,CAAA,UAAAC,EAAA,MAAAC,EAAA,YAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAAC,EAAA,KAEvB,IAAC,CAAA,GAAAF,EACK,IAAAC,EACJ,UAAAE,EAAA,0BAAAN,CAAA,EACoD,aAAA,GAAAC,CAAA,GAAAC,EAAA,KAAAA,CAAA,GAAA,EAAA,GAEQ,SAAA,CAE5DK,EAAA,IAAA,OAAA,CAAA,UAAA,iCAAA,SAAAN,EAAA,EAAwDC,GAAAK,EAAA,IAAA,OAAA,CAAA,UAAA,uCAAA,SAAAL,EAAA,CAC4B,CAAA,CAAA,CAG1F,EAEAJ,EAAA,YAAA,iTCVO,MAAAU,EAAAC,GAAA,CACL,GAAA,CAAAA,EACE,MAAA,GAGF,GAAA,OAAAA,GAAA,SACE,MAAA,8BAAAA,CAAA,GAGF,KAAA,CAAA,MAAAC,EAAA,KAAAC,CAAA,EAAAF,EAEA,OAAAH,EAAAI,GAAA,+BAAAA,CAAA,GAAAC,GAAA,8BAAAA,CAAA,EAAA,CACF,EAEOC,EAAA,CAAA,CAAA,SAAAC,EAAA,YAAAJ,CAAA,IAAAF,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,sBAAAE,EAAAC,CAAA,CAAA,EAAA,SAAAI,CAAA,CAAA,EAIPD,EAAA,YAAA,4kBCpCA;AAAA;AAAA;AAAA,GAWO,MAAAE,EAAA,CAAA,CAAA,SAAAD,CAAA,IAAAN,EAAA,IAAA,MAAA,CAAA,UAAA,sBAAA,SAAAM,CAAA,CAAA,EAEPC,EAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}