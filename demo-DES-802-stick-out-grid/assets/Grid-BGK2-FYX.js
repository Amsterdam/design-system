import{j as u}from"./jsx-runtime-BlAj40OV.js";import{c as m}from"./clsx-B-dksMZM.js";import{r as o}from"./index-Cs7sjTYM.js";/**
 * @license EUPL-1.2+
 * Copyright Gemeente Amsterdam
 */const _=(a,s,e,l)=>{if(!e&&!l)return[];const r=[];if(e==="all"||typeof e=="number")r.push(`ams-grid__cell--span-${e}`);else if(e){const{narrow:i,medium:d,wide:t}=e;r.push(`ams-grid__cell--span-${i}`,`ams-grid__cell--span-${d}-medium`,`ams-grid__cell--span-${t}-wide`)}if(typeof l=="number")r.push(`ams-grid__cell--start-${l}`);else if(l){const{narrow:i,medium:d,wide:t}=l;r.push(`ams-grid__cell--start-${i}`,`ams-grid__cell--start-${d}-medium`,`ams-grid__cell--start-${t}-wide`)}if(typeof a=="number")r.push(`ams-grid__cell--row-span-${a}`);else if(a){const{narrow:i,medium:d,wide:t}=a;r.push(`ams-grid__cell--row-span-${i}`,`ams-grid__cell--row-span-${d}-medium`,`ams-grid__cell--row-span-${t}-wide`)}if(typeof s=="number")r.push(`ams-grid__cell--row-start-${s}`);else if(s){const{narrow:i,medium:d,wide:t}=s;r.push(`ams-grid__cell--row-start-${i}`,`ams-grid__cell--row-start-${d}-medium`,`ams-grid__cell--row-start-${t}-wide`)}return r},p=o.forwardRef(({as:a="div",children:s,className:e,rowSpan:l,rowStart:r,span:i,start:d,...t},f)=>u.jsx(a,{...t,ref:f,className:m("ams-grid__cell",_(l,r,i,d),e),children:s}));p.displayName="Grid.Cell";try{Grid.Cell.displayName="Grid.Cell",Grid.Cell.__docgenInfo={description:"",displayName:"Grid.Cell",props:{as:{defaultValue:null,description:"The HTML element to use.",name:"as",required:!1,type:{name:"enum",value:[{value:'"article"'},{value:'"div"'},{value:'"section"'}]}},span:{defaultValue:null,description:`Lets the cell span the full width of all grid variants.
The amount of grid columns the cell spans.`,name:"span",required:!1,type:{name:'"all" | ResponsiveGridValues<GridColumnNumber>'}},start:{defaultValue:null,description:"The index of the grid column the cell starts at.",name:"start",required:!1,type:{name:"ResponsiveGridValues<GridColumnNumber>"}},rowSpan:{defaultValue:null,description:"The amount of grid rows the cell spans.",name:"rowSpan",required:!1,type:{name:"ResponsiveGridValues<number>"}},rowStart:{defaultValue:null,description:"The index of the grid row the cell starts at.",name:"rowStart",required:!1,type:{name:"ResponsiveGridValues<number>"}}}}}catch{}const g=(a,s,e)=>{const l=[];return e?[`ams-grid--padding-vertical--${e}`]:(a&&l.push(`ams-grid--padding-bottom--${a}`),s&&l.push(`ams-grid--padding-top--${s}`),l)},c=o.forwardRef(({children:a,className:s,gapVertical:e,paddingBottom:l,paddingTop:r,paddingVertical:i,...d},t)=>u.jsx("div",{...d,ref:t,className:m("ams-grid",e&&`ams-grid--gap-vertical--${e}`,g(l,r,i),s),children:a}));c.displayName="Grid";const n=Object.assign(c,{Cell:p});try{n.displayName="Grid",n.__docgenInfo={description:"",displayName:"Grid",props:{gapVertical:{defaultValue:null,description:"The amount of space between rows.",name:"gapVertical",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"none"'},{value:'"large"'}]}},paddingBottom:{defaultValue:null,description:"The amount of space below.",name:"paddingBottom",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"medium"'}]}},paddingTop:{defaultValue:null,description:"The amount of space above.",name:"paddingTop",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"medium"'}]}},paddingVertical:{defaultValue:null,description:"The amount of space above and below.",name:"paddingVertical",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"medium"'}]}}}}}catch{}export{n as G};
