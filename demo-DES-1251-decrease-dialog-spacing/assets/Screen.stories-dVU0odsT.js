import{j as c}from"./jsx-runtime-Cf8x2fCZ.js";import{c as u}from"./clsx-B-dksMZM.js";import{r as p}from"./index-G8LIXM5I.js";const a=p.forwardRef(({children:r,className:l,fullHeight:n,maxWidth:i="wide",...m},d)=>c.jsx("div",{...m,className:u("ams-screen",n&&"ams-screen--full-height",`ams-screen--${i}`,l),ref:d,children:r}));a.displayName="Screen";try{a.displayName="Screen",a.__docgenInfo={description:"",displayName:"Screen",props:{fullHeight:{defaultValue:null,description:"Whether the screen should stretch to the full height of the viewport.",name:"fullHeight",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:{value:"wide"},description:"The maximum width of the screen.",name:"maxWidth",required:!1,type:{name:"enum",value:[{value:'"wide"'},{value:'"x-wide"'}]}}}}}catch{}const f={title:"Components/Layout/Screen",component:a,args:{className:"ams-docs-screen"},argTypes:{className:{table:{disable:!0}}},parameters:{layout:"fullscreen"}},e={args:{children:c.jsx("div",{className:"ams-docs-item"})}};var s,t,o;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    children: <div className="ams-docs-item" />
  }
}`,...(o=(t=e.parameters)==null?void 0:t.docs)==null?void 0:o.source}}};const h=["Default"],y=Object.freeze(Object.defineProperty({__proto__:null,Default:e,__namedExportsOrder:h,default:f},Symbol.toStringTag,{value:"Module"}));export{y as S};
