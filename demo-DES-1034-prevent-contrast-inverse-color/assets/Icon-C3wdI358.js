import{j as i}from"./jsx-runtime-z8MfsBtr.js";import{c}from"./clsx-B-dksMZM.js";import{r as u}from"./index-D7uoVdV3.js";const l=u.forwardRef(({className:o,color:n,size:e="level-3",square:r,svg:a,...s},t)=>i.jsx("span",{ref:t,className:c("ams-icon",n&&`ams-icon--${n}-color`,e==="level-3"&&"ams-icon--size-3",e==="level-4"&&"ams-icon--size-4",e==="level-5"&&"ams-icon--size-5",e==="level-6"&&"ams-icon--size-6",r&&"ams-icon--square",o),...s,children:typeof a=="function"?a():a}));l.displayName="Icon";try{l.displayName="Icon",l.__docgenInfo={description:"",displayName:"Icon",props:{color:{defaultValue:null,description:"Changes the text colour for readability on a dark background.",name:"color",required:!1,type:{name:"enum",value:[{value:'"inverse"'}]}},size:{defaultValue:{value:"level-3"},description:"The size of the icon. Corresponds with the text levels.",name:"size",required:!1,type:{name:"enum",value:[{value:'"level-3"'},{value:'"level-4"'},{value:'"level-5"'},{value:'"level-6"'}]}},square:{defaultValue:null,description:"Whether the icon container should be made square.",name:"square",required:!1,type:{name:"boolean"}},svg:{defaultValue:null,description:"The component rendering the iconâ€™s markup.",name:"svg",required:!0,type:{name:"Function | ReactNode"}}}}}catch{}export{l as I};
