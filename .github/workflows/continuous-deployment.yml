name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "16.16.x"

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install
          pnpm ls --recursive

  build-lint-test:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "16.16.x"

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install

      - name: "Continuous Integration: build"
        run: |
          pnpm run --if-present build

      - name: "Continuous Integration: lint"
        run: |
          pnpm run --if-present lint

      - name: "Continuous Integration: test"
        run: |
          pnpm run --if-present test

      - name: "Retain build artifact: storybook css"
        uses: actions/upload-artifact@v3
        with:
          name: storybook-css
          path: storybook/storybook-css/dist/
          retention-days: 1

      - name: "Retain build artifact: storybook React"
        uses: actions/upload-artifact@v3
        with:
          name: storybook-react
          path: storybook/storybook-react/dist/
          retention-days: 1

  publish-storybook:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3

      - name: "Restore build artifact: Storybook css"
        uses: actions/download-artifact@v3
        with:
          name: storybook-css
          path: dist/storybook

      - name: "Restore build artifact: Storybook react"
        uses: actions/download-artifact@v3
        with:
          name: storybook-react
          # React storybook is deployed to the /storybook-react subdirectory.
          # In the main css storybook, the contents of /storybook-react
          # are also shown using Storybook composition.
          path: dist/storybook/storybook-react

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages
          folder: dist/storybook
