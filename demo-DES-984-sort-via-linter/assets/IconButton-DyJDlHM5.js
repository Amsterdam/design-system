import{j as e}from"./jsx-runtime-z8MfsBtr.js";import{c}from"./index.esm-DfRxjY0e.js";import{c as d}from"./clsx-B-dksMZM.js";import{r as m}from"./index-D7uoVdV3.js";import{I as p}from"./Icon-hgTynAJE.js";const o=m.forwardRef(({className:t,contrastColor:a,inverseColor:n,label:r,size:l="level-5",svg:s=c,...i},u)=>e.jsxs("button",{...i,className:d("ams-icon-button",a&&"ams-icon-button--contrast-color",n&&"ams-icon-button--inverse-color",t),ref:u,children:[e.jsx("span",{className:"ams-visually-hidden",children:r}),e.jsx(p,{size:l,square:!0,svg:s})]}));o.displayName="IconButton";try{o.displayName="IconButton",o.__docgenInfo={description:"",displayName:"IconButton",props:{contrastColor:{defaultValue:null,description:"Changes the text colour for readability on a light (but not white) background.",name:"contrastColor",required:!1,type:{name:"boolean"}},inverseColor:{defaultValue:null,description:"Changes the text colour for readability on a dark background.",name:"inverseColor",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"The accessible text for the button. Will be announced by screen readers. Should describe the button’s action.",name:"label",required:!0,type:{name:"string"}},size:{defaultValue:{value:"level-5"},description:"The size of the icon. Corresponds with the text levels.",name:"size",required:!1,type:{name:"enum",value:[{value:'"level-3"'},{value:'"level-4"'},{value:'"level-5"'},{value:'"level-6"'}]}},svg:{defaultValue:null,description:"The component rendering the icon’s markup.",name:"svg",required:!1,type:{name:"Function"}}}}}catch{}export{o as I};
