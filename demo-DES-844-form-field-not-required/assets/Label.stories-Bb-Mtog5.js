import{j as e}from"./jsx-runtime-BlAj40OV.js";import{c as h}from"./clsx-B-dksMZM.js";import{r as f}from"./index-Cs7sjTYM.js";const i=({hint:a})=>e.jsxs("span",{className:"ams-hint",children:["(",a,")"]}),r=f.forwardRef(({children:a,className:c,hint:o,optional:d,...m},u)=>{let s=null;return d?s=o?e.jsx(i,{hint:o}):e.jsx(i,{hint:"niet verplicht"}):o&&(s=e.jsx(i,{hint:o})),e.jsxs("label",{...m,ref:u,className:h("ams-label",c),children:[a,"Â ",s]})});r.displayName="Label";try{r.displayName="Label",r.__docgenInfo={description:"",displayName:"Label",props:{hint:{defaultValue:null,description:"Provides additional context to the user, i.e. whether the associated form field is optional or required. Make sure that this prop communicates field optionality if the `optional` prop is `true` and vice versa.",name:"hint",required:!1,type:{name:"string"}},optional:{defaultValue:null,description:"Whether the associated input is optional. Will render the value of the hint prop or 'niet verplicht'. Make sure that the hint communicates field optionality this prop is `true` and vice versa.",name:"optional",required:!1,type:{name:"boolean"}}}}}catch{}/**
 * @license EUPL-1.2+
 * Copyright Gemeente Amsterdam
 */const b={title:"Components/Forms/Label",component:r,args:{children:"Label",hint:"",optional:!1},argTypes:{children:{description:"The text content.",table:{disable:!1}}}},t={};var l,n,p;t.parameters={...t.parameters,docs:{...(l=t.parameters)==null?void 0:l.docs,source:{originalSource:"{}",...(p=(n=t.parameters)==null?void 0:n.docs)==null?void 0:p.source}}};const _=["Default"],v=Object.freeze(Object.defineProperty({__proto__:null,Default:t,__namedExportsOrder:_,default:b},Symbol.toStringTag,{value:"Module"}));export{v as L};
