/**
 * @license EUPL-1.2+
 * Copyright Gemeente Amsterdam
 */

@import "../../common/input-label-focus";
@import "../../common/hide-input";
@import "../../common/text-rendering";

.ams-radio__input {
  @include hide-input;
  @include input-label-focus;
}

@mixin forced-colors {
  @media (forced-colors: active) {
    background-color: FieldText; // Use default input text color for radio button
  }
}

@mixin forced-colors-disabled-input {
  @media (forced-colors: active) {
    background-color: GrayText;
  }
}

// Default
.ams-radio__label {
  color: var(--ams-radio-color);
  cursor: pointer;
  display: inline-flex;
  font-family: var(--ams-radio-font-family);
  font-size: var(--ams-radio-font-size);
  font-weight: var(--ams-radio-font-weight);
  gap: var(--ams-radio-gap);
  line-height: var(--ams-radio-line-height);
  outline-offset: var(--ams-radio-outline-offset);
  position: relative;
  text-decoration-thickness: var(--ams-radio-text-decoration-thickness);
  text-underline-offset: var(--ams-radio-text-underline-offset);

  // Radio button check mark
  &::after {
    background-color: var(--ams-radio-button-checked-background-color);
    block-size: var(--ams-radio-button-checked-block-size);
    flex-shrink: 0;
    inline-size: var(--ams-radio-button-checked-inline-size);
    -webkit-mask-image: var(--ams-radio-button-checked-mask-image);
    mask-image: var(--ams-radio-button-checked-mask-image);
    -webkit-mask-position: center;
    mask-position: center;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    position: absolute;

    @include forced-colors;
  }

  // Radio button
  &::before {
    background-color: var(--ams-radio-button-background-color);
    block-size: var(--ams-radio-button-block-size);
    content: "";
    flex-shrink: 0;
    inline-size: var(--ams-radio-button-inline-size);
    -webkit-mask-image: var(--ams-radio-button-mask-image);
    mask-image: var(--ams-radio-button-mask-image);
    -webkit-mask-position: center;
    mask-position: center;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;

    @include forced-colors;
  }

  @include text-rendering;
}

// Default hover
.ams-radio__label:hover {
  color: var(--ams-radio-hover-color);
  text-decoration-line: var(--ams-radio-hover-text-decoration-line);

  &::after {
    background-color: var(--ams-radio-button-checked-hover-background-color);

    @include forced-colors;
  }

  &::before {
    background-color: var(--ams-radio-button-hover-background-color);

    @include forced-colors;
  }
}

// Checked
.ams-radio__input:checked + .ams-radio__label::after {
  content: "";
}

// Invalid
.ams-radio__input[aria-invalid="true"] + .ams-radio__label {
  &::after {
    background-color: var(--ams-radio-button-checked-invalid-background-color);

    @include forced-colors;
  }

  &::before {
    background-color: var(--ams-radio-button-invalid-background-color);

    @include forced-colors;
  }
}

// Disabled
.ams-radio__input:disabled + .ams-radio__label {
  color: var(--ams-radio-disabled-color);
  cursor: not-allowed;

  &::after {
    background-color: var(--ams-radio-button-checked-disabled-background-color);

    @include forced-colors-disabled-input;
  }

  &::before {
    background-color: var(--ams-radio-button-disabled-background-color);

    @include forced-colors-disabled-input;
  }
}

// Disabled invalid
.ams-radio__input[aria-invalid="true"]:disabled {
  + .ams-radio__label {
    &::after {
      // TODO: currently disabled invalid gets the same styling as disabled. This should get its own styling.
      background-color: var(--ams-radio-button-checked-disabled-invalid-background-color);

      @include forced-colors-disabled-input;
    }
    &::before {
      // TODO: currently disabled invalid gets the same styling as disabled. This should get its own styling.
      background-color: var(--ams-radio-button-disabled-invalid-background-color);

      @include forced-colors-disabled-input;
    }
  }
}

// HOVER

// Disabled label hover
.ams-radio__input:disabled + .ams-radio__label:hover {
  text-decoration: none;
}

// Invalid hover
.ams-radio__input[aria-invalid="true"] + .ams-radio__label:hover {
  &::after {
    // TODO: this should be the (currently non-existent) dark red hover color
    background-color: var(--ams-radio-button-checked-invalid-hover-background-color);

    @include forced-colors;
  }

  &::before {
    // TODO: this should be the (currently non-existent) dark red hover color
    background-color: var(--ams-radio-button-invalid-hover-background-color);

    @include forced-colors;
  }
}

// Disabled invalid hover
.ams-radio__input[aria-invalid="true"]:disabled + .ams-radio__label:hover {
  &::after {
    // TODO: currently disabled invalid gets the same styling as disabled. This should get its own styling.
    background-color: var(--ams-radio-button-checked-disabled-invalid-background-color);

    @include forced-colors-disabled-input;
  }

  &::before {
    // TODO: currently disabled invalid gets the same styling as disabled. This should get its own styling.
    background-color: var(--ams-radio-button-disabled-invalid-background-color);

    @include forced-colors-disabled-input;
  }
}
