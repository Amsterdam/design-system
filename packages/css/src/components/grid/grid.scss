/**
 * @license EUPL-1.2+
 * Copyright Gemeente Amsterdam
 */

@use "sass:list";
@use "sass:map";
@import "../../common/breakpoint";
@import "../../common/size";

$amsterdam-grid-sizes: ();
$amsterdam-grid-allowed-sizes: ("sm", "md", "lg");
$amsterdam-grid-gap-classes: (
  "gap-vertical": "row-gap",
);
$amsterdam-grid-padding-classes: (
  "padding-bottom": "padding-block-end",
  "padding-top": "padding-block-start",
  "padding-vertical": "padding-block",
);

// Filter sizes to sm, md, lg
@each $size, $label in $amsterdam-sizes {
  @if list.index($amsterdam-grid-allowed-sizes, $size) {
    $amsterdam-grid-sizes: map.merge(
      $amsterdam-grid-sizes,
      (
        $size: $label,
      )
    );
  }
}

.amsterdam-grid {
  display: grid;
  gap: var(--amsterdam-grid-gap-md);
  grid-template-columns: repeat(var(--amsterdam-grid-column-count), 1fr);
  padding-inline: var(--amsterdam-grid-padding-inline);

  @media screen and (min-width: $amsterdam-breakpoint-medium) {
    grid-template-columns: repeat(var(--amsterdam-grid-medium-column-count), 1fr);
  }

  @media screen and (min-width: $amsterdam-breakpoint-wide) {
    grid-template-columns: repeat(var(--amsterdam-grid-wide-column-count), 1fr);
  }
}

.amsterdam-grid--gap-vertical--none {
  row-gap: initial;
}

@each $class, $property in $amsterdam-grid-gap-classes {
  @each $size, $label in $amsterdam-grid-sizes {
    .amsterdam-grid--#{$class}--#{$label} {
      #{$property}: var(--amsterdam-grid-gap-#{$size});
    }
  }
}

@each $class, $property in $amsterdam-grid-padding-classes {
  @each $size, $label in $amsterdam-grid-sizes {
    .amsterdam-grid--#{$class}--#{$label} {
      #{$property}: var(--amsterdam-grid-padding-block-#{$size});
    }
  }
}

.amsterdam-grid__cell--span-all {
  grid-column: 1 / -1;
}

// The order of the following declaration blocks ensures the intended specificity.

@for $i from 1 through 12 {
  .amsterdam-grid__cell--span-#{$i} {
    grid-column-end: span $i;
  }

  .amsterdam-grid__cell--start-#{$i} {
    grid-column-start: $i;
  }
}

@media screen and (min-width: $amsterdam-breakpoint-medium) {
  @for $i from 1 through 12 {
    .amsterdam-grid__cell--span-#{$i}-medium {
      grid-column-end: span $i;
    }

    .amsterdam-grid__cell--start-#{$i}-medium {
      grid-column-start: $i;
    }
  }
}

@media screen and (min-width: $amsterdam-breakpoint-wide) {
  @for $i from 1 through 12 {
    .amsterdam-grid__cell--span-#{$i}-wide {
      grid-column-end: span $i;
    }

    .amsterdam-grid__cell--start-#{$i}-wide {
      grid-column-start: $i;
    }
  }
}
