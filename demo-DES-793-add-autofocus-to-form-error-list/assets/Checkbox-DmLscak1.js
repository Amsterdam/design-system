import{j as r}from"./jsx-runtime-BlAj40OV.js";import{c as m}from"./clsx-B-dksMZM.js";import{r as a}from"./index-Cs7sjTYM.js";const s=a.forwardRef(({children:c,className:o,invalid:l,indeterminate:n,...t},d)=>{const i=a.useId(),e=a.useRef(null);return a.useImperativeHandle(d,()=>e.current),a.useEffect(()=>{e.current&&(e.current.indeterminate=!!n)},[e,n]),r.jsxs("div",{className:m("ams-checkbox",o),children:[r.jsx("input",{...t,"aria-invalid":l||void 0,className:"ams-checkbox__input",id:i,ref:e,type:"checkbox"}),r.jsxs("label",{className:"ams-checkbox__label",htmlFor:i,children:[r.jsx("span",{className:"ams-checkbox__checkmark"}),c]})]})});s.displayName="Checkbox";try{s.displayName="Checkbox",s.__docgenInfo={description:"",displayName:"Checkbox",props:{invalid:{defaultValue:null,description:"Whether the value fails a validation rule.",name:"invalid",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"Allows being neither checked nor unchecked.",name:"indeterminate",required:!1,type:{name:"boolean"}}}}}catch{}export{s as C};
