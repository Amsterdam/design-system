import{j as e}from"./jsx-runtime-Cf8x2fCZ.js";import{c}from"./index.esm-BePZVRox.js";import{c as u}from"./clsx-B-dksMZM.js";import{r as d}from"./index-G8LIXM5I.js";import{I as m}from"./Icon-BiLXnzv6.js";const t=d.forwardRef(({className:a,color:n,label:o,size:r,svg:s=c,...i},l)=>e.jsxs("button",{...i,className:u("ams-icon-button",n&&`ams-icon-button--${n}`,a),ref:l,children:[e.jsx("span",{className:"ams-visually-hidden",children:o}),e.jsx(m,{size:r,square:!0,svg:s})]}));t.displayName="IconButton";try{t.displayName="IconButton",t.__docgenInfo={description:"",displayName:"IconButton",props:{color:{defaultValue:null,description:"Changes the text colour for readability on a light or dark background.",name:"color",required:!1,type:{name:"enum",value:[{value:'"inverse"'},{value:'"contrast"'}]}},label:{defaultValue:null,description:"The accessible text for the button. Will be announced by screen readers. Should describe the button’s action.",name:"label",required:!0,type:{name:"string"}},size:{defaultValue:null,description:"The size of the icon.",name:"size",required:!1,type:{name:"string"}},svg:{defaultValue:null,description:"The component rendering the icon’s markup.",name:"svg",required:!1,type:{name:"Function | ReactNode"}}}}}catch{}export{t as I};
